@page
@model TaskManager.Pages.IndexModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task Manager</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            margin: 20px;
            background-color: #f4f4f4;
            color: #333;
        }

        h1, h2 {
            color: #2c3e50;
            text-align: center;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
            background-color: #fff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            overflow: hidden;
        }

        th, td {
            padding: 12px;
            text-align: left;
            border: 1px solid #ddd;
        }

        th {
            background-color: #b1ddf9;
            color: #fff;
        }

        form {
            margin-bottom: 20px;
        }

        label {
            margin-right: 10px;
            color: #555;
        }

        input[type="text"], input[type="date"] {
            padding: 8px;
            margin-right: 10px;
            width: 200px;
            border: 1px solid #ccc;
            border-radius: 4px;
            outline: none;
        }

        button {
            padding: 8px 12px;
            background-color: #2ecc71;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            button:hover {
                background-color: #27ae60;
            }

        .edit-button {
            background-color: #3498db;
        }

            .edit-button:hover {
                background-color: #2980b9;
            }

        .search-result-table {
            margin-top: 20px;
            border: 1px solid #ddd;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            overflow: hidden;
            background-color: #b1ddf9;
            color: #b1ddf9;
        }

            .search-result-table th, .search-result-table td {
                background-color: #b1ddf9;
                color: #333;
            }
    </style>
</head>
<body>
    <h1>Task Manager</h1>

    <h2>All Tasks</h2>
    <table>
        <thead>
            <tr>
                <th>Id</th>
                <th>Description</th>
                <th>Due Date</th>
                <th>Completion Status</th>
                <th>Completion Date</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var task in Model.Tasks)
            {
                <tr>
                    <td>@task.Id</td>
                    <td>@task.Description</td>
                    <td>@task.DueDate.ToString("MM-dd-yyyy")</td>
                    <td>@(task.IsCompleted ? "Complete" : "Incomplete")</td>
                    <td>@(task.CompletionDate.HasValue ? task.CompletionDate.Value.ToString("MM-dd-yyyy") : "-")</td>
                    <td>
                        <form method="post" asp-page-handler="RemoveTask">
                            <input type="hidden" name="taskId" value="@task.Id" />
                            <button type="submit">Remove</button>
                        </form>
                        <form method="post" asp-page-handler="MarkCompleted">
                            <input type="hidden" name="taskId" value="@task.Id" />
                            <button type="submit">Mark Completed</button>
                        </form>
                        <form method="post" asp-page-handler="EditTask">
                            <input type="hidden" name="taskId" value="@task.Id" />
                            <input type="text" name="editedDescription" placeholder="Edit Description" required />
                            <input type="date" name="editedDueDate" placeholder="Edit Due Date" required />
                            <br />
                            <br />
                            <button type="submit" class="edit-button">Edit Task</button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <h2 style="text-align:left">Add New Task</h2>
    <form method="post" asp-page-handler="AddTask">
        <label>Description:</label>
        <input type="text" name="newTask.Description" placeholder="hello" required />
        <label>Due Date:</label>
        <input type="date" name="newTask.DueDate" required />
        <button type="submit">Add Task</button>
    </form>

    <h2 style="text-align:left">Search Task by ID</h2>
    <form method="post" asp-page-handler="SearchTaskById">
        <label for="searchedID">Enter Task ID:</label>
        <input type="number" id="searchedID" name="searchedID" placeholder="Task ID" required />
        <button type="submit">Get Task Details</button>
    </form>

    @if (Model.searchedTasksIDMethod.Id > 0)
    {
        <table class="search-result-table">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Description</th>
                    <th>Due Date</th>
                    <th>Completion Status</th>
                    <th>Completion Date</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@Model.searchedTasksIDMethod.Id</td>
                    <td>@Model.searchedTasksIDMethod.Description</td>
                    <td>@Model.searchedTasksIDMethod.DueDate.ToString("MM-dd-yyyy")</td>
                    <td>@(Model.searchedTasksIDMethod.IsCompleted ? "Complete" : "Incomplete")</td>
                    <td>@(Model.searchedTasksIDMethod.CompletionDate.HasValue ? Model.searchedTasksIDMethod.CompletionDate.Value.ToString("yyyy-MM-dd"): "-")</td>
                </tr>
            </tbody>
        </table>
    }

    <h2 style="text-align:left">Search Task by Description</h2>
    <form method="post" asp-page-handler="SearchTaskByDescription">
        <label for="searchedDescription">Enter Task Description:</label>
        <input type="text" id="searchedDescription" name="searchedDescription" placeholder="Task Description" required />
        <button type="submit">Get Task Details</button>
    </form>

    @if (Model.searchedTaskByDescriptionMethod.Id > 0)
    {
        <table class="search-result-table">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Description</th>
                    <th>Due Date</th>
                    <th>Completion Status</th>
                    <th>Completion Date</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@Model.searchedTaskByDescriptionMethod.Id</td>
                    <td>@Model.searchedTaskByDescriptionMethod.Description</td>
                    <td>@Model.searchedTaskByDescriptionMethod.DueDate.ToString("MM-dd-yyyy")</td>
                    <td>@(Model.searchedTaskByDescriptionMethod.IsCompleted ? "Complete" : "Incomplete")</td>
                    <td>@(Model.searchedTaskByDescriptionMethod.CompletionDate.HasValue ? Model.searchedTaskByDescriptionMethod.CompletionDate.Value.ToString("yyyy-MM-dd"): "-")</td>
                </tr>
            </tbody>
        </table>
    }

    <h2 style="text-align:left">Completed Tasks</h2>
    <table class="search-result-table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Description</th>
                <th>Due Date</th>
                <th>Completion Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var task in Model.Tasks)
            {
                if (@task.IsCompleted == true)
                {
                    <tr>
                        <td>@task.Id</td>
                        <td>@task.Description</td>
                        <td>@task.DueDate.ToString("MM-dd-yyyy")</td>
                        <td>@(task.CompletionDate.HasValue ? task.CompletionDate.Value.ToString("MM-dd-yyyy") : "-")</td>
                    </tr>
                }
            }
        </tbody>
    </table>
    <h2 style="text-align:left">Show all Tasks</h2>
    <form method="post" asp-page-handler="DownloadTasksJson">
        <button type="submit">⬇️</button>
    </form>
    <br />
    <h2 style="text-align:left">Change Task's Description By ID</h2>
    <form method="post" asp-page-handler="ChangeDescriptionByID">
        <input type="number" id="IDSearched" name="IDSearched" placeholder="Enter Task ID" required />
        <input type="text" id="newDescription" name="newDescription" placeholder="New Description" required />
        <button type="submit">✅</button>
    </form>
    <br />
    <br />
    <h2 style="text-align:left">Mark Task As Completed By ID</h2>
    <form method="post" asp-page-handler="MarkCompleted">
        <input type="number" id="taskId" name="taskId" placeholder="Enter Task ID" required />
        <button type="submit">✅</button>
    </form>
    <br />
    <br />
    <h2 style="text-align: left">Filter For Tasks By Completion Status</h2>
    <form method="post" asp-page-handler="FilterTasksByCompletionStatus">
        <input type="text" id="EnteredCompletionStatus" name="EnteredCompletionStatus" placeholder="Completion Status" required />
        <button type="submit">Filter</button>
    </form>
    @if (Model.CorrectCompletionStatus == true)
    {
        <table class="search-result-table">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Description</th>
                    <th>Due Date</th>
                    <th>Completion Date</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var task in Model.Tasks)
                {
                    if (task.IsCompleted == Model.CompletionStatusTasks)
                    {
                        <tr>
                            <td>@task.Id</td>
                            <td>@task.Description</td>
                            <td>@task.DueDate.ToString("MM-dd-yyyy")</td>
                            <td>@(task.CompletionDate.HasValue ? task.CompletionDate.Value.ToString("MM-dd-yyyy") : "-")</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    }
    <br />
    <br />
    <h2 style="text-align: left">Filter By Due Date</h2>
    <form method="post" asp-page-handler="FilterByDueDate">

        <input type="date" id="EnteredDueDate" name="EnteredDueDate" required />
        <input type="text" id="BeforeOrAfter" name="BeforeOrAfter" placeholder="Criteria (Before or After)" required />
        <button type="submit">Filter</button>
    </form>
    <br />
    <br />
    @if (Model.DueDateFilter >= DateTime.Now)
    {
        <table class="search-result-table">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Description</th>
                    <th>Due Date</th>
                    <th>Completion Date</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var task in Model.Tasks)
                {
                    if (task.DueDate <= Model.DueDateFilter && (string.Equals(Model.DateFilter, "Before", StringComparison.OrdinalIgnoreCase)))
                    {
                        <tr>
                            <td>@task.Id</td>
                            <td>@task.Description</td>
                            <td>@task.DueDate.ToString("MM-dd-yyyy")</td>
                            <td>@(task.CompletionDate.HasValue ? task.CompletionDate.Value.ToString("MM-dd-yyyy") : "-")</td>
                        </tr>
                    }
                    else if (task.DueDate >= Model.DueDateFilter && (string.Equals(Model.DateFilter, "After", StringComparison.OrdinalIgnoreCase)))
                    {
                        <tr>
                            <td>@task.Id</td>
                            <td>@task.Description</td>
                            <td>@task.DueDate.ToString("MM-dd-yyyy")</td>
                            <td>@(task.CompletionDate.HasValue ? task.CompletionDate.Value.ToString("MM-dd-yyyy") : "-")</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    }
    <br />
    <br />
    <h2 style="text-align:left">Filter By Completion Date</h2>
    <form method="post" asp-page-handler="FilterByCD">

        <input type="date" id="EnteredCD" name="EnteredCD" required />
        <input type="text" id="BeforeOrAfter" name="BeforeOrAfter" placeholder="Criteria (Before or After)" required />
        <button type="submit">Filter</button>
    </form>
    <br />
    <table class="search-result-table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Description</th>
                <th>Due Date</th>
                <th>Completion Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var task in Model.Tasks)
            {
                if (task.CompletionDate <= Model.CDPointer && (string.Equals(Model.CDFilter, "Before", StringComparison.OrdinalIgnoreCase)))
                {
                    <tr>
                        <td>@task.Id</td>
                        <td>@task.Description</td>
                        <td>@task.DueDate.ToString("MM-dd-yyyy")</td>
                        <td>@(task.CompletionDate.HasValue ? task.CompletionDate.Value.ToString("MM-dd-yyyy") : "-")</td>
                    </tr>
                }
                else if (task.CompletionDate >= Model.CDPointer && (string.Equals(Model.CDFilter, "After", StringComparison.OrdinalIgnoreCase)))
                {
                    <tr>
                        <td>@task.Id</td>
                        <td>@task.Description</td>
                        <td>@task.DueDate.ToString("MM-dd-yyyy")</td>
                        <td>@(task.CompletionDate.HasValue ? task.CompletionDate.Value.ToString("MM-dd-yyyy") : "-")</td>
                    </tr>
                }
            }
        </tbody>
    </table>
    <br />
    <br />

</body>
</html>
